generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ProfileType {  
  INDIVIDUAL
  OOO
  IP
}

enum ProductState {
  NEW
  USED
}

model User{
  id Int @id @default(autoincrement())
  fullName String
  email String @unique
  phoneNumber String @unique
  password String
  rating Int?
  profileType ProfileType @default(INDIVIDUAL)
  refreshToken String?
  refreshTokenExpiresAt DateTime?

  isResetVerified Boolean @default(false)

  products Product[]
  favorites Product[] @relation("UserFavorites")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product{
  id Int @id @default(autoincrement())
  name String
  price Int
  state ProductState
  brand String?
  model String?
  description String?
  address String?
  images String[] @default([])
  categoryId Int
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  subCategoryId Int
  subCategory SubCategory @relation(fields: [subCategoryId], references: [id], onDelete: Cascade)

  userId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  favoritedBy User[] @relation("UserFavorites")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
// Основная категория
model Category{
  id Int @id @default(autoincrement())
  name String

  products Product[]

  subCategories SubCategory[]
}
// Подкатегории
model SubCategory{
  id Int @id @default(autoincrement())
  name String
  
  categoryId Int
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  products Product[]
}