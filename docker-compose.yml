services:
  app:
    build:
      context: .
      target: development
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/Medvito?schema=public
      # - REDIS_HOST=redis
      # - REDIS_PORT=6379
      # - SMTP_HOST=smtp.beget.com
      # - SMTP_PORT=465
      # - SMTP_USER=support@benty.work
      # - SMTP_PASSWORD=S_Be5173
      - JWT_SECRET=ss3ZpIGPhT4qpL0LhwrSIjh3gxAey88i
      - JWT_REFRESH_SECRET=OvMAfvaZEtsEkj4utArLBMD7ia3gITaO
      - BASE_URL=http://localh1ost:3000
    depends_on:
      - db
      # - redis
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: sh -c "sleep 5 && npx prisma db push --accept-data-loss && nest start --watch"

  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=Medvito
    ports:
      - '5433:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./dumps/dump.sql:/docker-entrypoint-initdb.d/dump.sql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 10

  # redis: # Добавляем сервис Redis
  #   image: redis:7-alpine
  #   ports:
  #     - '6380:6379'
  #   volumes:
  #     - redis_data:/data
  #   healthcheck:
  #     test: ['CMD', 'redis-cli', 'ping']
  #     interval: 5s
  #     timeout: 3s
  #     retries: 5

volumes:
  postgres_data:
  # redis_data: # Volume для Redis
